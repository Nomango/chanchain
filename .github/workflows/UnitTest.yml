name: Unit Test

on:
  push:
    branches: [ "v1", "v2" ]
  pull_request:
    branches: [ "v1", "v2" ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    env:
      BRANCH: ${{ github.ref_name }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18.x

    - name: Test
      run: |
        go test -v ./... -covermode=count -coverprofile="coverage.out"
        go tool cover -func="coverage.out"

    - name: Report coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: coverage.out
        env_vars: BRANCH
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: true

  test_v2:
    if: ${{ github.base_ref == 'v2' }}
    strategy:
      fail-fast: false
      matrix:
        go-version: [ 1.18.x ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup Go ${{ matrix.go-version }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - name: Test
      run: go test -v ./...

  test_v1:
    if: ${{ github.base_ref == 'v1' }}
    strategy:
      fail-fast: false
      matrix:
        go-version: [ 1.14.x, 1.15.x, 1.16.x, 1.17.x, 1.18.x ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup Go ${{ matrix.go-version }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - name: Test
      run: go test -v ./...
